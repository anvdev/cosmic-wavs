###################################
#
# make start-all
#
# docker exec -it wavs bash
#
###################################

services:
  # anvil:
  #   image: "ghcr.io/foundry-rs/foundry:stable"
  #   platform: linux/amd64
  #   container_name: "anvil"
  #   network_mode: "host"
  #   ports:
  #     - "8545:8545"
  #   environment:
  #     ANVIL_IP_ADDR: 0.0.0.0
  #   command: ["anvil", "--no-cors"]

  # The main instance all WAVS interaction will happen from
  wavs:
    image: "ghcr.io/lay3rlabs/wavs:0.3.0"
    container_name: "wavs"
    stop_signal: SIGKILL
    # depends_on: ["anvil"]
    network_mode: "host"
    env_file: "./.env"
    ports:
      - "8000:8000"
    environment:
      WAVS_HOME: "/wavs/packages/wavs"
      WAVS_CLI_HOME: "/wavs/packages/cli"
      WAVS_AGGREGATOR_HOME: "/wavs/packages/aggregator"
    command: ["wavs"]
    volumes:
      - "./:/wavs"
      - "./.docker:/root/wavs/cli/"

  aggregator:
    image: "ghcr.io/lay3rlabs/wavs:0.3.0"
    container_name: "wavs-aggregator"
    stop_signal: SIGKILL
    depends_on: ["wavs"]
    env_file: "./.env"
    ports:
      - "8001:8001"
    command: ["wavs-aggregator"]
    volumes:
      - "./:/wavs"
    network_mode: "host"

  deploy-eigenlayer:
    image: "ghcr.io/lay3rlabs/wavs:0.3.0"
    container_name: "wavs-deploy-eigenlayer"
    depends_on: ["wavs", "aggregator"] # "anvil",
    restart: "no"
    env_file: "./.env"
    command: ["wavs-cli", "deploy-eigen-core"]
    volumes:
      - "./:/wavs"
      - "./.docker:/root/wavs/cli/"
    network_mode: "host"

  deploy-eigenlayer-service-manager:
    image: "ghcr.io/lay3rlabs/wavs:0.3.0"
    container_name: "wavs-deploy-service-manager"
    depends_on:
      deploy-eigenlayer:
        condition: service_completed_successfully
    restart: "no"
    env_file: "./.env"
    command: ["wavs-cli", "deploy-eigen-service-manager"]
    volumes:
      - "./:/wavs"
      - "./.docker:/root/wavs/cli/"
    network_mode: "host"

  # deploy-cosmos-network:
  #   image: "cosmos/gaia:v14.2.0" #  TODO: use cosmos-omnibus:  
  #   container_name: "cosmos-node"
  #   network_mode: "host" # Use host networking for simplicity
  #   ports:
  #     - "26656:26656" # P2P port for node communication
  #     - "26657:26657" # RPC port for client interactions
  #     - "1317:1317"   # REST API port for querying
  #   volumes:
  #     - "./.cosmos:/root/.gaia" # Persist node data
  #     - "./setup-cosmos.sh:/setup-cosmos.sh" # Mount the setup script
  #   environment:
  #     - CHAIN_ID=testnet-1 # Chain ID for the Cosmos network
  #     - MONIKER=test-node  # Node moniker (name)
  #   command: >
  #     /bin/bash /setup-cosmos.sh ${CHAIN_ID} ${MONIKER}
  #   healthcheck:
  #     test: ["CMD", "curl", "-f", "http://localhost:26657/health"]
  #     interval: 30s
  #     timeout: 10s
  #     retries: 3
  #     start_period: 40s2